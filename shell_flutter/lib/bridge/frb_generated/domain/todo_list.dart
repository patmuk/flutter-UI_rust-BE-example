// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.5.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../application/app_state.dart';
import '../frb_generated.dart';
import '../utils/cqrs_traits.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `add_todo`, `clean_list`, `get_all_todos`, `remove_todo`
// These types are ignored because they are not used by any `pub` functions: `TodoItem`, `TodoListProcessingError`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `eq`, `eq`, `eq`, `fmt`, `fmt`, `fmt`, `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<TodoListModel>>
abstract class TodoListModel implements RustOpaqueInterface, CqrsModel {
  static Future<TodoListModel> default_() =>
      RustLib.instance.api.crateDomainTodoListTodoListModelDefault();

  /// bootstrap the model from the app's state
  static Future<void> getModelLock({required AppState appState}) =>
      RustLib.instance.api
          .crateDomainTodoListTodoListModelGetModelLock(appState: appState);

  /// This is how to access the fields of a heavy object behind a RustAutoOpaque.
  /// This is copying parts the content, which Dart needs to show to the user.
  ///
  /// If `items` would be `pub` FRB would automatically create a getter. However, this
  /// getter would `clone()` the `items` as well. As we pretend that a single item
  /// is heavy to clone, we use a custom function to `clone()` only the lightweight and
  /// only needed part for presentation.
  Future<List<String>> getTodosAsString();
}
