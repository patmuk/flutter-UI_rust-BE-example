// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.72.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.io.dart' if (dart.library.html) 'bridge_generated.web.dart';

class CoreImpl implements Core {
  final CorePlatform _platform;
  factory CoreImpl(ExternalLibrary dylib) => CoreImpl.raw(CorePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory CoreImpl.wasm(FutureOr<WasmModule> module) => CoreImpl(module as ExternalLibrary);
  CoreImpl.raw(this._platform);
  Future<List<Effect>> processEvent({required Event event, dynamic hint}) {
    var arg0 = _platform.api2wire_box_autoadd_event(event);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_process_event(port_, arg0),
      parseSuccessData: _wire2api_list_effect,
      constMeta: kProcessEventConstMeta,
      argValues: [event],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kProcessEventConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "process_event",
        argNames: ["event"],
      );

  Future<ViewModel> view({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_view(port_),
      parseSuccessData: _wire2api_view_model,
      constMeta: kViewConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kViewConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "view",
        argNames: [],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  List<String> _wire2api_StringList(dynamic raw) {
    return (raw as List<dynamic>).cast<String>();
  }

  ViewModel _wire2api_box_autoadd_view_model(dynamic raw) {
    return _wire2api_view_model(raw);
  }

  Effect _wire2api_effect(dynamic raw) {
    switch (raw[0]) {
      case 0:
        return Effect_Render(
          _wire2api_box_autoadd_view_model(raw[1]),
        );
      default:
        throw Exception("unreachable");
    }
  }

  List<Effect> _wire2api_list_effect(dynamic raw) {
    return (raw as List<dynamic>).map(_wire2api_effect).toList();
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }

  int _wire2api_usize(dynamic raw) {
    return castInt(raw);
  }

  ViewModel _wire2api_view_model(dynamic raw) {
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return ViewModel(
      items: _wire2api_StringList(arr[0]),
      count: _wire2api_usize(arr[1]),
    );
  }
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

@protected
int api2wire_usize(int raw) {
  return raw;
}
// Section: finalizer
